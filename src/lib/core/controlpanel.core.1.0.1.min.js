!function(){"use strict";function t(t){t.interceptors.push("authInterceptor")}angular.module("controlpanel.core",["angular-jwt"]).config(["$httpProvider",t])}();
!function(){"use strict";angular.module("controlpanel.core").constant("API",{URL:"http://localhost:3131/api"}).constant("LOGIN",{POST_LOGIN:"/admin/auth/"}).constant("USER",{GET_LIST_USER:"/admin/user/",GET_USER:"/admin/user/{0}",POST_USER:"/admin/user/",DELETE_USER:"/admin/user/{0}",PUT_USER:"/admin/user/{0}"})}();
String.prototype.format=String.prototype.format||function(){"use strict";var t=this.toString();if(arguments.length){var r,e=typeof arguments[0],o="string"===e||"number"===e?Array.prototype.slice.call(arguments):arguments[0];for(r in o)t=t.replace(new RegExp("\\{"+r+"\\}","gi"),o[r])}return t};
!function(){"use strict";function e(e,n){return{request:function(r){return 0===r.url.indexOf(e.URL)&&(r.headers.Accept="application/json",n.isLoggedIn()&&(r.headers.Authorization="Bearer "+n.getToken())),r},response:function(e){const r=e.headers("X-Token");return r&&r!==n.getToken()&&n.setToken(r),e}}}angular.module("controlpanel.core").factory("authInterceptor",["API","CoreAuthService",e])}();
!function(){"use strict";function e(){this.user={}}angular.module("controlpanel.core").service("StorageData",e),e.$inject=[]}();
!function(){"use strict";function e(e,n,t,o){function r(e){try{return e&&!t.isTokenExpired(e)}catch(n){return!1}}function i(){return o.sessionStorage.getItem("token")}function u(){return a()?(d=t.decodeToken(i()),d._doc):null}function c(e){return!!r(e)&&void o.sessionStorage.setItem("token",e)}function s(){o.sessionStorage.clear(),e.currentUser=!1}function a(){return r(i())}function f(e){return!!a()&&("string"==typeof e&&(e=[e]),e.indexOf(u().role)>=0)}var l=this;l.isValidToken=r,l.getToken=i,l.getTokenData=u,l.setToken=c,l.removeToken=s,l.isLoggedIn=a,l.hasRole=f;var d}angular.module("controlpanel.core").service("CoreAuthService",["$rootScope","$timeout","jwtHelper","$window",e])}();
!function(){"use strict";function t(t){function n(n,e){return t.get(n,{params:e}).then(u)["catch"](a)}function e(n,e){return t.post(n,e).then(u)["catch"](a)}function r(n,e){return t["delete"](n,{params:e}).then(u)["catch"](a)}function c(n,e){return t.put(n,e).then(u)["catch"](a)}function u(t,n,e,r){return t.data}function a(t){return t.status===-1?"server undefined":t.data}var i=this;i.get=n,i.post=e,i["delete"]=r,i.put=c}angular.module("controlpanel.core").service("HTTPService",t),t.$inject=["$http"]}();

!function(){"use strict";function e(e,n,r,o,t){function i(o){var t=n.URL+r.POST_LOGIN;return e.post(t,o)}var c=this;c.login=i}angular.module("controlpanel.core").service("CoreLoginService",e),e.$inject=["HTTPService","API","LOGIN","StorageData","$q"]}();
!function(){"use strict";function e(e,r,t,n,o){function U(n){var o=(r.URL+t.GET_USER).format(n);return e.get(o)}function a(n){var o=r.URL+t.POST_USER;return e.post(o,n)}function u(n){var o=(r.URL+t.PUT_USER).format(n._id);return e.put(o,n)}function c(n){var o=(r.URL+t.DELETE_USER).format(n);return e["delete"](o)}function i(){var n=r.URL+t.GET_LIST_USER;return console.log(n),e.get(n)}var s=this;s.getUser=U,s.saveUser=a,s.updateUser=u,s.deleteUser=c,s.getListUser=i}angular.module("controlpanel.core").service("CoreUserService",e),e.$inject=["HTTPService","API","USER","StorageData","$q"]}();