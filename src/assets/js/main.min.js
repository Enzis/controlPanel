'use strict';

(function () {

    'use strict';

    angular.module('controlpanel', ['controlpanel.core', 'controlpanel.login', 'controlpanel.home', 'ngRoute', 'ui.router', 'ngDialog', 'LocalStorageModule']);
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel').controller('controlpanelController', controlpanelController);

    controlpanelController.$inject = ['DataFactory'];

    function controlpanelController(DataFactory) {
        var vm = this;
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel').config(configRouter).config(ConfigLocalStorage).run(["$rootScope", "$location", "$timeout", "CoreAuthService", run]);

    configRouter.$inject = ["$routeProvider", "$locationProvider"];

    function configRouter($routeProvider, $locationProvider) {
        $locationProvider.hashPrefix('');
        $routeProvider.otherwise({ redirectTo: "/login" });
    }

    ConfigLocalStorage.$inject = ['localStorageServiceProvider'];

    function ConfigLocalStorage(localStorageServiceProvider) {
        localStorageServiceProvider.setPrefix('controlpanel');
    }

    function run($rootScope, $location, $timeout, CoreAuthService) {
        $rootScope.$on("$routeChangeStart", function ($event, next) {
            if (!next.$$route || next.$$route.allowAnonymous || next.$$route.redirectTo) {
                return true;
            }

            if (!CoreAuthService.isLoggedIn()) {
                $location.path("/login");
                return;
            }

            if (next.$$route.role && !CoreAuthService.hasRole(next.$$route.role)) {
                $location.path("/access-denied");
            }
        });
    }
})();
'use strict';

(function () {

    angular.module('controlpanel.home', []).config(homeConfig);

    homeConfig.$inject = ['$routeProvider'];
    function homeConfig($routeProvider) {
        $routeProvider.when("/home", {
            controller: 'homeController',
            templateUrl: 'components/home/home.html',
            allowWithoutEvent: true
        });
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel.home').controller('homeController', homeController);

    homeController.$inject = [];

    function homeController() {
        //vars
        var vm = this;
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel.home').service('homeService', homeService);

    homeService.$inject = [];

    function homeService() {}
})();
'use strict';

(function () {

    angular.module('controlpanel.login', []).config(loginConfig);

    loginConfig.$inject = ['$routeProvider'];
    function loginConfig($routeProvider) {
        $routeProvider.when("/login", {
            controller: 'loginController',
            controllerAs: 'vm',
            templateUrl: 'components/login/login.html',
            allowWithoutEvent: true
        });
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel.login').controller('loginController', loginController);

    loginController.$inject = ['$http', 'CoreLoginService', 'CoreAuthService', 'CoreUserService', '$location'];

    function loginController($http, CoreLoginService, CoreAuthService, CoreUserService, $location) {
        //vars
        var vm = this;
        var test = CoreAuthService.getTokenData();
        vm.login = { email: '', password: '' };

        //functions to view
        vm.entrar = function () {
            CoreLoginService.login(vm.login).then(function (data) {
                $location.path('/home');
            }, function (err) {
                console.log(err);
            });
        };
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel.login').service('loginService', loginService);

    loginService.$inject = [];

    function loginService() {}
})();
'use strict';

(function () {

    'use strict';

    var staticRoot = 'http://127.0.0.1:3131/api/';
    angular.module('controlpanel').constant('CONST', {

        getLivros: staticRoot,
        getCupom: staticRoot.concat('getCupom')

    });
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel').factory('DataFactory', DataFactory);

    DataFactory.$inject = [];

    function DataFactory() {

        var data = {};

        return data;
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel').service('HTTPSERVICE', HTTPSERVICE);

    HTTPSERVICE.$inject = ['$http', '$q'];

    function HTTPSERVICE($http, $q) {
        var vm = this;

        vm.get = function (url) {
            return $http.get(url).then(function (data) {
                return data.data;
            }, function (err) {
                return err;
            });
        };

        vm.post = function (url, params) {
            return $http.post(url, params).then(function (data) {
                return data.data;
            }, function (err) {
                return err;
            });
        };

        vm.delete = function (url) {
            return $http.delete(url).then(function (data) {
                return data.data;
            }, function (err) {
                return err;
            });
        };

        vm.put = function (url) {
            return $http.delete(url).then(function (data) {
                return data.data;
            }, function (err) {
                return err;
            });
        };
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel').directive('ngEnter', function () {
        return function (scope, element, attrs) {
            element.bind("keydown keypress", function (event) {
                if (event.which === 13) {
                    scope.$apply(function () {
                        scope.$eval(attrs.ngEnter, { 'event': event });
                    });
                    event.preventDefault();
                }
            });
        };
    });
})();