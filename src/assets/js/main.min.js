'use strict';

(function () {

    'use strict';

    angular.module('controlpanel', ['ngRoute', 'ui.router', 'ui.router.state.events', 'ngDialog', 'LocalStorageModule', 'controlpanel.core', 'controlpanel.home', 'controlpanel.login', 'controlpanel.user', 'controlpanel.item', 'controlpanel.accessDenied']);
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel').controller('controlpanelController', controlpanelController);

    controlpanelController.$inject = ['CoreAuthService'];

    function controlpanelController(CoreAuthService) {
        var vm = this;
        vm.isLogged = CoreAuthService.isLoggedIn;
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel').config(ConfigProvider).config(ConfigLocalStorage).run(["$rootScope", "$state", "CoreAuthService", run]);

    ConfigProvider.$inject = ['$urlRouterProvider'];

    function ConfigProvider($urlRouterProvider) {
        $urlRouterProvider.otherwise('/login');
    }

    ConfigLocalStorage.$inject = ['localStorageServiceProvider'];

    function ConfigLocalStorage(localStorageServiceProvider) {
        localStorageServiceProvider.setPrefix('controlpanel');
    }

    function run($rootScope, $state, CoreAuthService) {
        $rootScope.$on("$stateChangeStart", function (event, toState, toParams, fromState, fromParams) {
            if (!CoreAuthService.isLoggedIn() && toState.url != '/login') {
                event.preventDefault();
                $state.go("login");
            }

            if (CoreAuthService.isLoggedIn() && toState.url == '/login') {
                event.preventDefault();
                $state.go("home");
            }
            if (toState.role && !CoreAuthService.hasRole(toState.role)) {
                event.preventDefault();
                $state.go("access-denied");
            }
        });
    }
})();
'use strict';

(function () {

    angular.module('controlpanel.home', []);

    angular.module('controlpanel.home').config(homeConfig);

    homeConfig.$inject = ['$stateProvider'];
    function homeConfig($stateProvider) {
        $stateProvider.state('home', {
            url: '/home',
            views: {
                'menu': {
                    template: '<menu compress="vm.compress"></menu>'
                },
                'body': {
                    templateUrl: 'modules/home/home.html',
                    controller: 'homeController',
                    controllerAs: 'vm'
                }
            }
        });
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel.home').controller('homeController', homeController);

    homeController.$inject = ['DataFactory'];

    function homeController(DataFactory) {
        //vars
        var vm = this;
        vm.data = DataFactory;

        var init = function init() {
            vm.data.menuItemActive = 'home';
        };

        init();

        vm.compress = true;
        vm.diminuiMenu = function () {
            vm.compress = !vm.compress;
            console.log('asdsa');
        };
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel.home').service('homeService', homeService);

    homeService.$inject = [];

    function homeService() {}
})();
'use strict';

(function () {
    'use strict';

    angular.module('controlpanel.item', []).config(itemConfig);

    itemConfig.$inject = ['$stateProvider'];
    function itemConfig($stateProvider) {
        $stateProvider.state('item', {
            url: '/item',
            views: {
                'menu': {
                    template: '<menu compress="vm.compress"></menu>'
                },
                'body': {
                    templateUrl: 'modules/item/item.html',
                    controller: 'itemController',
                    controllerAs: 'vm'
                }
            }
        });
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel.item').controller('itemController', itemController);

    itemController.$inject = ['DataFactory', 'ngDialog'];

    function itemController(DataFactory, ngDialog) {
        //vars
        var vm = this;
        vm.data = DataFactory;

        var init = function init() {
            vm.data.menuItemActive = 'item';
        };

        init();

        vm.listItens = [{ _id: 123213312, name: 'TESTE', status: 'Concluido', requester: 'User 1' }, { _id: 123213311, name: 'TESTE 1', status: 'Pendente', requester: 'User 1' }, { _id: 123213313, name: 'TESTE 2', status: 'Concluido', requester: 'User 1' }, { _id: 123213314, name: 'TESTE 3', status: 'Pendente', requester: 'User 1' }, { _id: 123213315, name: 'TESTE 4', status: 'Concluido', requester: 'User 1' }, { _id: 123213316, name: 'TESTE 5', status: 'Pendente', requester: 'User 1' }, { _id: 123213317, name: 'TESTE 2', status: 'Concluido', requester: 'User 1' }, { _id: 123213318, name: 'TESTE 3', status: 'Pendente', requester: 'User 1' }, { _id: 123213319, name: 'TESTE 4', status: 'Concluido', requester: 'User 1' }, { _id: 1232133111, name: 'TESTE 5', status: 'Pendente', requester: 'User 1' }];

        vm.newItem = function () {
            var newItem = ngDialog.open({
                templateUrl: 'modules/item/itemModal.html',
                className: 'ngdialog-theme-default',
                closeByDocument: false,
                closeByEscape: false,
                showClose: false,
                controller: 'itemModelController',
                controllerAs: 'vm'
            });
        };

        vm.editItem = function (item) {
            var editItem = ngDialog.open({
                templateUrl: 'modules/item/itemModal.html',
                className: 'ngdialog-theme-default',
                closeByDocument: false,
                closeByEscape: false,
                showClose: false,
                controller: 'itemModelController',
                controllerAs: 'vm',
                data: {
                    item: item
                }
            });
        };
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel.item').service('itemService', itemService);

    itemService.$inject = [];

    function itemService() {}
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel.item').controller('itemModelController', itemModelController);

    itemModelController.$inject = ['$scope'];

    function itemModelController($scope) {
        //vars
        var vm = this;

        var init = function init() {
            vm.item = $scope.ngDialogData ? angular.copy($scope.ngDialogData.item) : {};
        };

        init();

        vm.saveItem = function () {
            // if (vm.item._id) {
            //     CoreItemService.saveItem(vm.item);
            // } else {
            //     CoreItemService.editItem(vm.item);
            // }
        };
    }
})();
'use strict';

(function () {
    'use strict';

    angular.module('controlpanel.login', []).config(loginConfig);

    loginConfig.$inject = ['$stateProvider'];
    function loginConfig($stateProvider) {
        $stateProvider.state('login', {
            url: '/login',
            views: {
                'body': {
                    templateUrl: 'modules/login/login.html',
                    controller: 'loginController',
                    controllerAs: 'vm'
                }
            }
        });
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel.login').controller('loginController', loginController);

    loginController.$inject = ['$http', 'CoreLoginService', 'CoreAuthService', 'CoreUserService', '$location'];

    function loginController($http, CoreLoginService, CoreAuthService, CoreUserService, $location) {
        //vars
        var vm = this;
        var test = CoreAuthService.getTokenData();
        vm.login = { email: '', password: '' };

        //functions to view
        vm.entrar = function () {
            CoreLoginService.login(vm.login).then(function (data) {
                $location.path('/home');
            }, function (err) {
                console.log(err);
            });
        };
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel.login').service('loginService', loginService);

    loginService.$inject = [];

    function loginService() {}
})();
'use strict';

(function () {
    'use strict';

    angular.module('controlpanel.user', []).config(userConfig);

    userConfig.$inject = ['$stateProvider'];
    function userConfig($stateProvider) {
        $stateProvider.state('user', {
            url: '/user',
            views: {
                'menu': {
                    template: '<menu compress="vm.compress"></menu>'
                },
                'body': {
                    templateUrl: 'modules/user/user.html',
                    controller: 'userController',
                    controllerAs: 'vm'
                }
            }
        });
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel.user').controller('userController', userController);

    userController.$inject = ['CoreUserService', 'ngDialog', 'DataFactory'];

    function userController(CoreUserService, ngDialog, DataFactory) {
        //vars
        var vm = this;
        vm.data = DataFactory;

        var init = function init() {
            vm.data.menuItemActive = 'user';
        };

        init();
        vm.listUsers = [{ _id: 123213312, name: 'João Alexandre Tristão de Almeida', role: 'admin', createdAt: '01/01/2017' }, { _id: 123213311, name: 'João 1', role: 'user', createdAt: '01/01/2017' }, { _id: 123213313, name: 'João 2', role: 'admin', createdAt: '01/01/2017' }, { _id: 123213314, name: 'João 3', role: 'user', createdAt: '01/01/2017' }, { _id: 123213315, name: 'João 4', role: 'admin', createdAt: '01/01/2017' }, { _id: 123213316, name: 'João 5', role: 'user', createdAt: '01/01/2017' }, { _id: 123213317, name: 'João 2', role: 'admin', createdAt: '01/01/2017' }, { _id: 123213318, name: 'João 3', role: 'user', createdAt: '01/01/2017' }, { _id: 123213319, name: 'João 4', role: 'admin', createdAt: '01/01/2017' }, { _id: 1232133111, name: 'João 5', role: 'user', createdAt: '01/01/2017' }];

        vm.newUser = function () {
            var newUser = ngDialog.open({
                templateUrl: 'modules/user/userModal.html',
                className: 'ngdialog-theme-default',
                closeByDocument: false,
                closeByEscape: false,
                showClose: false,
                controller: 'userModelController',
                controllerAs: 'vm'
            });
        };

        vm.editUser = function (user) {
            var editUser = ngDialog.open({
                templateUrl: 'modules/user/userModal.html',
                className: 'ngdialog-theme-default',
                closeByDocument: false,
                closeByEscape: false,
                showClose: false,
                controller: 'userModelController',
                controllerAs: 'vm',
                data: {
                    user: user
                }
            });
        };
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel.user').service('userService', userService);

    userService.$inject = [];

    function userService() {}
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel.user').controller('userModelController', userModelController);

    userModelController.$inject = ['CoreUserService', '$scope'];

    function userModelController(CoreUserService, $scope) {
        //vars
        var vm = this;

        var init = function init() {
            vm.user = $scope.ngDialogData ? angular.copy($scope.ngDialogData.user) : {};
        };

        init();

        vm.saveUser = function () {
            if (vm.user._id) {
                CoreUserService.saveUser(vm.user);
            } else {
                CoreUserService.editUser(vm.user);
            }
        };
    }
})();
'use strict';

(function () {
    'use strict';

    angular.module('controlpanel.accessDenied', []).config(accessDeniedConfig);

    accessDeniedConfig.$inject = ['$stateProvider'];
    function accessDeniedConfig($stateProvider) {
        $stateProvider.state('access-denied', {
            url: '/access-denied',
            views: {
                'menu': {
                    template: '<menu compress="vm.compress"></menu>'
                },
                'body': {
                    templateUrl: 'modules/error/access-denied/access-denied.html',
                    controller: 'accessDeniedController',
                    controllerAs: 'vm'
                }
            }
        });
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel.accessDenied').controller('accessDeniedController', accessDeniedController);

    accessDeniedController.$inject = ['$location'];

    function accessDeniedController($location) {
        //vars
        var vm = this;
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel.accessDenied').service('accessDeniedService', accessDeniedService);

    accessDeniedService.$inject = [];

    function accessDeniedService() {}
})();
'use strict';

(function () {
    'use strict';

    angular.module('controlpanel').component('menu', {
        bindings: {},
        templateUrl: 'components/menu/menu.html',
        controller: menuController,
        controllerAs: 'vm'
    });

    menuController.$inject = ['$scope', '$window', '$state', 'DataFactory'];

    function menuController($scope, $window, $state, DataFactory) {
        var vm = this;
        vm.compress = false;
        vm.data = DataFactory;

        vm.menuCompress = function () {
            vm.compress = !vm.compress;
        };

        vm.changeScreen = function (screen) {
            return $state.go(screen);
        };

        angular.element($window).bind('resize', function () {
            console.log($window.innerWidth);
            if ($window.innerWidth <= 767 && vm.compress) {
                vm.compress = false;
                $scope.$apply();
            }
        });
    }
})();
'use strict';

(function () {

    'use strict';

    var staticRoot = 'http://127.0.0.1:3131/api/';
    angular.module('controlpanel').constant('CONST', {

        getLivros: staticRoot,
        getCupom: staticRoot.concat('getCupom')

    });
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel').factory('DataFactory', DataFactory);

    DataFactory.$inject = [];

    function DataFactory() {

        var data = {};

        return data;
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel').service('HTTPSERVICE', HTTPSERVICE);

    HTTPSERVICE.$inject = ['$http', '$q'];

    function HTTPSERVICE($http, $q) {
        var vm = this;

        vm.get = function (url) {
            return $http.get(url).then(function (data) {
                return data.data;
            }, function (err) {
                return err;
            });
        };

        vm.post = function (url, params) {
            return $http.post(url, params).then(function (data) {
                return data.data;
            }, function (err) {
                return err;
            });
        };

        vm.delete = function (url) {
            return $http.delete(url).then(function (data) {
                return data.data;
            }, function (err) {
                return err;
            });
        };

        vm.put = function (url) {
            return $http.delete(url).then(function (data) {
                return data.data;
            }, function (err) {
                return err;
            });
        };
    }
})();
'use strict';

(function () {

    'use strict';

    angular.module('controlpanel').directive('ngEnter', function () {
        return function (scope, element, attrs) {
            element.bind("keydown keypress", function (event) {
                if (event.which === 13) {
                    scope.$apply(function () {
                        scope.$eval(attrs.ngEnter, { 'event': event });
                    });
                    event.preventDefault();
                }
            });
        };
    });
})();